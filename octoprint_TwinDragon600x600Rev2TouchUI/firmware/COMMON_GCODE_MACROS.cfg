########################################
# GCODE_MACRO.cfg
# Common files contains all Gcodes and commands to extend the capability of klipper to be backwards compatable with Marlin for all printer variants
# gcodes and preocesses.
# Author: Vijay Raghav Varada
# Version: 1
########################################

########################################
# Misc
########################################
[force_move]
enable_force_move: True

[save_variables]
filename: /home/pi/variables.cfg

[idle_timeout]
gcode:
    {% if printer['pause_resume'].is_paused|int == 1 %}  #if its idle because its paused
        {% if printer.extruder.temperature|float >= 150 %}
            M104 T0 S150
        {% endif %}
        {% if printer.extruder1.temperature|float >= 150 %}
            M104 T1 S150
        {% endif %}
    {% else %}  #Any other case
        M107                     ;Fans off
        M104 T0 S0                ;left extruder heater off
        M104 T1 S0                ;right extruder heater off
        M140 S0                  ;heated bed heater off
        M84                      ;steppers off
    {% endif %}
timeout: 2400
 
########################################
# Settings Related
########################################

# Saves value for Tool Offset
[gcode_macro M218]
gcode:
 {% if params.T =='1' %}
  {% if params.X %}
  SAVE_VARIABLE VARIABLE=tool_offset_x VALUE={params.X|float}
  {% endif %}
  {% if params.Y %}
  SAVE_VARIABLE VARIABLE=tool_offset_y VALUE={params.Y|float}
  {% endif %}
  {% if params.Z %}
  SAVE_VARIABLE VARIABLE=tool_offset_z VALUE={params.Z|float}
  {% endif %}
 {% endif %}
[gcode_macro M500]
gcode:
    SAVE_CONFIG NO_RESTART=1

# Posts current value of Z Probe Offset and Tool Offset on the terminal in order to be picked up by the frontend.

[gcode_macro M503]
gcode:
 RESPOND TYPE=echo MSG="M218 T1 X{printer.save_variables.variables.tool_offset_x} Y{printer.save_variables.variables.tool_offset_y} Z{printer.save_variables.variables.tool_offset_z}"
 RESPOND TYPE=echo MSG="M851 Z{printer.configfile.config.probe.z_offset}"


# Babystepping/Z Probe Offset.
# Value is saved post adjustment.
[gcode_macro M290]
gcode:
 SET_GCODE_OFFSET Z_ADJUST={params.Z|default(0.0)} MOVE=1
 Z_OFFSET_APPLY_PROBE
 SAVE_CONFIG NO_RESTART=1
 
# Sets Z Probe Offset to a particular Value  
[gcode_macro M851]
gcode:
 {% if params.Z %}
 SET_GCODE_OFFSET Z={params.Z|default(0.0)}
 Z_OFFSET_APPLY_PROBE
 SAVE_CONFIG
 {% endif %}

# One may use this mechanism to run a series of g-code commands in place of a G28 found in the normal g-code input. 
# This may be useful on printers that require a specific procedure to home the machine.
[homing_override]
gcode:
 BED_MESH_CLEAR
 {% if params.X and not params.Y and not params.Z %}
        G28 X
    {% endif %}
    {% if not params.X and params.Y and not params.Z %}
        G28 Y
    {% endif %}
    {% if not params.X and not params.Y and params.Z %}
        G28 Z
 
    {% endif %}    
    {% if params.Y and params.X and not params.Z %}
        G28 Y
        G28 X
    {% endif %}
    {% if not params.X and not params.Y and not params.Z %}
        # G1 Z10 F6 # No need to do this, G28 Z already does it. Move Z up just incase the nozzle is too close to the bed before homing (can be the case in cancelled prints/powercuts/emergency stops)
        G28 Z # Home z, because detector is on the bed, not the nozzle
        G28 Y # Do Y next, to avoid potentially hitting the back of the nozzle wipe.
        G28 X
    {% endif %}
    {% if params.X and params.Y and params.Z %}
        G28 Z
        G28 Y
        G28 X
    {% endif %}


[gcode_macro M114]
rename_existing: M114.1
gcode:
    #RESPOND TYPE=echo MSG="Count {printer.gcode_move.gcode_position}"
    RESPOND TYPE=echo MSG="Count {printer.gcode_move.gcode_position}"
    M114.1

########################################
# Bed Mesh Calibration
########################################
# Clear/Restores Bed Mesh state.

[gcode_macro M420]
gcode:
 {% if params.S == '1' %}
     {% if printer.bed_mesh.profiles.p1 is defined %}
        RESPOND TYPE=echo MSG="Existing mesh found, loading...";
        BED_MESH_PROFILE LOAD=p1
     {% else %}
        RESPOND TYPE=echo MSG="No existing mesh found";
     {% endif %}
 {% endif %}
 {% if params.S == '0' %}
  BED_MESH_CLEAR
 {% endif %}

[gcode_macro G29]
gcode:
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=p1
    SAVE_CONFIG NO_RESTART=1
    M420 S1


########################################
# Temperatire Related
########################################


[gcode_macro M190]
rename_existing: M190.1
#default_parameter_S: off
#default_parameter_R: off
variable_tolerance: 1.0
gcode:
    #RESPOND TYPE=ECHO MSG="TEST"
    {% if params.S %}
        M140 S{params.S}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.S|float - tolerance}
    {% elif params.R %}
        M190.1 S{params.R}
    {% else %}
        M140 S0
    {% endif %}
    

########################################
# Pause & Resume Functionality
# TODO
########################################



 
    
